{
  "name": "@micro-os-plus/utils-lists",
  "version": "3.0.0",
  "description": "A source library xPack with the ÂµOS++ C++ lists utilities",
  "main": "",
  "scripts": {
    "npm-install": "npm install",
    "pack": "npm pack",
    "version-patch": "npm version patch",
    "version-minor": "npm version minor",
    "postversion": "git push origin --all && git push origin --tags",
    "git-log": "git log --pretty='%cd * %h %s' --date=short"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/micro-os-plus/utils-lists-xpack.git/"
  },
  "bugs": {
    "url": "https://github.com/micro-os-plus/utils-lists-xpack/issues/"
  },
  "homepage": "https://github.com/micro-os-plus/utils-lists-xpack/",
  "keywords": [
    "xpack",
    "c++",
    "micro-os-plus"
  ],
  "author": {
    "name": "Liviu Ionescu",
    "email": "ilg@livius.net",
    "url": "https://github.com/ilg-ul/"
  },
  "license": "MIT",
  "config": {},
  "$dependenciesUrls": [
    "https://github.com/xpack-dev-tools/",
    "https://github.com/micro-os-plus/"
  ],
  "devDependencies": {
    "@xpack-dev-tools/cmake": "3.21.6-1.1",
    "@xpack-dev-tools/meson-build": "0.60.3-1.1",
    "@xpack-dev-tools/ninja-build": "1.11.0-1.1",

    "@micro-os-plus/architecture-aarch32": "^3.0.0",
    "@micro-os-plus/architecture-aarch64": "^3.0.0",
    "@micro-os-plus/architecture-cortexm": "^6.1.0",
    "@micro-os-plus/architecture-synthetic-posix": "^4.0.2",
    "@micro-os-plus/build-helper": "^2.10.1",
    "@micro-os-plus/devices-qemu-aarch32": "3.0.1",
    "@micro-os-plus/devices-qemu-aarch64": "3.0.0",
    "@micro-os-plus/devices-qemu-cortexm": "^4.1.1",
    "@micro-os-plus/diag-trace": "^4.0.0",
    "@micro-os-plus/micro-test-plus": "^3.1.0",
    "@micro-os-plus/semihosting": "^5.0.0",
    "@xpack-3rd-party/arm-cmsis-core": "5.4.0-6"
  },
  "xpack": {
    "minimumXpmRequired": "0.12.10",
    "properties": {
      "buildFolderRelativePath": "{{ 'build' | path_join: configuration.name | to_filename | downcase }}",
      "buildFolderRelativePathPosix": "{{ 'build' | path_posix_join: configuration.name | downcase }}",
      "commandCMakePrepare": "{{ properties.commandCMakeReconfigure }} --log-level=VERBOSE",
      "commandCMakePrepareWithToolchain": "{{ properties.commandCMakePrepare }} -D CMAKE_TOOLCHAIN_FILE=../xpacks/micro-os-plus-build-helper/cmake/toolchains/{{ properties.toolchainFileName }}",
      "commandCMakeReconfigure": "cmake -S tests -B {{ properties.buildFolderRelativePathPosix }} -G Ninja -D CMAKE_BUILD_TYPE={{ properties.buildType }} -D PLATFORM_NAME={{ properties.platformName }} -D CMAKE_EXPORT_COMPILE_COMMANDS=ON",
      "commandCMakeBuild": "cmake --build {{ properties.buildFolderRelativePathPosix }}",
      "commandCMakeBuildVerbose": "cmake --build {{ properties.buildFolderRelativePathPosix }} --verbose",
      "commandCMakeClean": "cmake --build {{ properties.buildFolderRelativePathPosix }} --target clean",
      "commandCMakePerformTests": "cd {{ properties.buildFolderRelativePath }} && ctest -V",
      "commandMesonPrepare": "meson setup --backend ninja --buildtype {{ properties.buildType }} -D platform-name={{ properties.platformName }} {{ properties.buildFolderRelativePathPosix }} tests",
      "commandMesonPrepareWithToolchain": "meson setup --backend ninja --buildtype {{ properties.buildType }} -D platform-name={{ properties.platformName }} --native-file xpacks/micro-os-plus-build-helper/meson/toolchains/{{ properties.toolchainFileName }} --native-file tests/platform-{{ properties.platformName }}/meson/native.ini {{ properties.buildFolderRelativePathPosix }} tests",
      "commandMesonPrepareCross": "meson setup --backend ninja --buildtype {{ properties.buildType }} -D platform-name={{ properties.platformName }} --cross xpacks/micro-os-plus-build-helper/meson/toolchains/{{ properties.toolchainFileName }} --cross tests/platform-{{ properties.platformName }}/meson/cross.ini {{ properties.buildFolderRelativePathPosix }} tests",
      "commandMesonReconfigure": "meson setup --reconfigure {{ properties.buildFolderRelativePathPosix }} tests",
      "commandMesonBuild": "meson compile -C {{ properties.buildFolderRelativePathPosix }}",
      "commandMesonBuildVerbose": "meson compile -C {{ properties.buildFolderRelativePathPosix }} --verbose",
      "commandMesonClean": "meson compile -C {{ properties.buildFolderRelativePathPosix }} --clean",
      "commandMesonPerformTests": "meson test -C {{ properties.buildFolderRelativePathPosix }} --verbose"
    },
    "actions": {
      "install-all": [
        "xpm install --all-configs --quiet"
      ],
      "link-deps-all": [
        "xpm link @micro-os-plus/architecture-aarch32 --quiet",
        "xpm link @micro-os-plus/architecture-aarch64 --quiet",
        "xpm link @micro-os-plus/architecture-cortexm --quiet",
        "xpm link @micro-os-plus/architecture-synthetic-posix --quiet",
        "xpm link @micro-os-plus/build-helper --quiet",
        "xpm link @micro-os-plus/devices-qemu-aarch32 --quiet",
        "xpm link @micro-os-plus/devices-qemu-aarch64 --quiet",
        "xpm link @micro-os-plus/devices-qemu-cortexm --quiet",
        "xpm link @micro-os-plus/diag-trace --quiet",
        "xpm link @micro-os-plus/micro-test-plus --quiet",
        "xpm link @micro-os-plus/semihosting --quiet",
        "xpm link @xpack-3rd-party/arm-cmsis-core --quiet"
      ],
      "test-all": [
        "xpm run test-native",
        "xpm run test-cortex"
      ],
      "test-native": [
        "xpm run test-native-cmake",
        "xpm run test-native-meson"
      ],
      "test-native-cmake": [
        "{% if os.platform == 'darwin' %}xpm run test-native-cmake-sys{% endif %}",
        "xpm run test-native-cmake-gcc11",
        "xpm run test-native-cmake-clang12",
        "xpm run test-native-cmake-clang13"
      ],
      "test-native-meson": [
        "{% if os.platform == 'darwin' %}xpm run test-native-meson-sys{% endif %}",
        "xpm run test-native-meson-gcc11",
        "xpm run test-native-meson-clang12",
        "xpm run test-native-meson-clang13"
      ],
      "test-cortex": [
        "xpm run test-cortex-cmake",
        "xpm run test-cortex-meson"
      ],
      "test-cortex-cmake": [
        "xpm run test-qemu-cortex-m7f-cmake",
        "xpm run test-qemu-cortex-m0-cmake",
        "xpm run test-qemu-cortex-a72-cmake",
        "xpm run test-qemu-cortex-a15-cmake"
      ],
      "test-cortex-meson": [
        "xpm run test-qemu-cortex-m7f-meson",
        "xpm run test-qemu-cortex-m0-meson",
        "xpm run test-qemu-cortex-a72-meson",
        "xpm run test-qemu-cortex-a15-meson"
      ],
      "test-native-cmake-sys": [
        "xpm run prepare --config native-cmake-sys-debug",
        "xpm run build --config native-cmake-sys-debug",
        "xpm run test --config native-cmake-sys-debug",
        "xpm run prepare --config native-cmake-sys-release",
        "xpm run build --config native-cmake-sys-release",
        "xpm run test --config native-cmake-sys-release"
      ],
      "test-native-cmake-gcc11": [
        "xpm run prepare --config native-cmake-gcc11-debug",
        "xpm run build --config native-cmake-gcc11-debug",
        "xpm run test --config native-cmake-gcc11-debug",
        "xpm run prepare --config native-cmake-gcc11-release",
        "xpm run build --config native-cmake-gcc11-release",
        "xpm run test --config native-cmake-gcc11-release"
      ],
      "test-native-cmake-clang12": [
        "xpm run prepare --config native-cmake-clang12-debug",
        "xpm run build --config native-cmake-clang12-debug",
        "xpm run test --config native-cmake-clang12-debug",
        "xpm run prepare --config native-cmake-clang12-release",
        "xpm run build --config native-cmake-clang12-release",
        "xpm run test --config native-cmake-clang12-release"
      ],
      "test-native-cmake-clang13": [
        "xpm run prepare --config native-cmake-clang13-debug",
        "xpm run build --config native-cmake-clang13-debug",
        "xpm run test --config native-cmake-clang13-debug",
        "xpm run prepare --config native-cmake-clang13-release",
        "xpm run build --config native-cmake-clang13-release",
        "xpm run test --config native-cmake-clang13-release"
      ],
      "test-native-meson-sys": [
        "xpm run prepare --config native-meson-sys-debug",
        "xpm run build --config native-meson-sys-debug",
        "xpm run test --config native-meson-sys-debug",
        "xpm run prepare --config native-meson-sys-release",
        "xpm run build --config native-meson-sys-release",
        "xpm run test --config native-meson-sys-release"
      ],
      "test-native-meson-gcc11": [
        "xpm run prepare --config native-meson-gcc11-debug",
        "xpm run build --config native-meson-gcc11-debug",
        "xpm run test --config native-meson-gcc11-debug",
        "xpm run prepare --config native-meson-gcc11-release",
        "xpm run build --config native-meson-gcc11-release",
        "xpm run test --config native-meson-gcc11-release"
      ],
      "test-native-meson-clang12": [
        "xpm run prepare --config native-meson-clang12-debug",
        "xpm run build --config native-meson-clang12-debug",
        "xpm run test --config native-meson-clang12-debug",
        "xpm run prepare --config native-meson-clang12-release",
        "xpm run build --config native-meson-clang12-release",
        "xpm run test --config native-meson-clang12-release"
      ],
      "test-native-meson-clang13": [
        "xpm run prepare --config native-meson-clang13-debug",
        "xpm run build --config native-meson-clang13-debug",
        "xpm run test --config native-meson-clang13-debug",
        "xpm run prepare --config native-meson-clang13-release",
        "xpm run build --config native-meson-clang13-release",
        "xpm run test --config native-meson-clang13-release"
      ],
      "test-qemu-cortex-m7f-cmake": [
        "xpm run prepare --config qemu-cortex-m7f-cmake-debug",
        "xpm run build --config qemu-cortex-m7f-cmake-debug",
        "xpm run test --config qemu-cortex-m7f-cmake-debug",
        "xpm run prepare --config qemu-cortex-m7f-cmake-release",
        "xpm run build --config qemu-cortex-m7f-cmake-release",
        "xpm run test --config qemu-cortex-m7f-cmake-release"
      ],
      "test-qemu-cortex-m0-cmake": [
        "xpm run prepare --config qemu-cortex-m0-cmake-debug",
        "xpm run build --config qemu-cortex-m0-cmake-debug",
        "xpm run test --config qemu-cortex-m0-cmake-debug",
        "xpm run prepare --config qemu-cortex-m0-cmake-release",
        "xpm run build --config qemu-cortex-m0-cmake-release",
        "xpm run test --config qemu-cortex-m0-cmake-release"
      ],
      "test-qemu-cortex-a72-cmake": [
        "xpm run prepare --config qemu-cortex-a72-cmake-debug",
        "xpm run build --config qemu-cortex-a72-cmake-debug",
        "xpm run test --config qemu-cortex-a72-cmake-debug",
        "xpm run prepare --config qemu-cortex-a72-cmake-release",
        "xpm run build --config qemu-cortex-a72-cmake-release",
        "xpm run test --config qemu-cortex-a72-cmake-release"
      ],
      "test-qemu-cortex-a15-cmake": [
        "xpm run prepare --config qemu-cortex-a15-cmake-debug",
        "xpm run build --config qemu-cortex-a15-cmake-debug",
        "xpm run test --config qemu-cortex-a15-cmake-debug",
        "xpm run prepare --config qemu-cortex-a15-cmake-release",
        "xpm run build --config qemu-cortex-a15-cmake-release",
        "xpm run test --config qemu-cortex-a15-cmake-release"
      ],
      "test-qemu-cortex-m7f-meson": [
        "xpm run prepare --config qemu-cortex-m7f-meson-debug",
        "xpm run build --config qemu-cortex-m7f-meson-debug",
        "xpm run test --config qemu-cortex-m7f-meson-debug",
        "xpm run prepare --config qemu-cortex-m7f-meson-release",
        "xpm run build --config qemu-cortex-m7f-meson-release",
        "xpm run test --config qemu-cortex-m7f-meson-release"
      ],
      "test-qemu-cortex-m0-meson": [
        "xpm run prepare --config qemu-cortex-m0-meson-debug",
        "xpm run build --config qemu-cortex-m0-meson-debug",
        "xpm run test --config qemu-cortex-m0-meson-debug",
        "xpm run prepare --config qemu-cortex-m0-meson-release",
        "xpm run build --config qemu-cortex-m0-meson-release",
        "xpm run test --config qemu-cortex-m0-meson-release"
      ],
      "test-qemu-cortex-a72-meson": [
        "xpm run prepare --config qemu-cortex-a72-meson-debug",
        "xpm run build --config qemu-cortex-a72-meson-debug",
        "xpm run test --config qemu-cortex-a72-meson-debug",
        "xpm run prepare --config qemu-cortex-a72-meson-release",
        "xpm run build --config qemu-cortex-a72-meson-release",
        "xpm run test --config qemu-cortex-a72-meson-release"
      ],
      "test-qemu-cortex-a15-meson": [
        "xpm run prepare --config qemu-cortex-a15-meson-debug",
        "xpm run build --config qemu-cortex-a15-meson-debug",
        "xpm run test --config qemu-cortex-a15-meson-debug",
        "xpm run prepare --config qemu-cortex-a15-meson-release",
        "xpm run build --config qemu-cortex-a15-meson-release",
        "xpm run test --config qemu-cortex-a15-meson-release"
      ],
      "clean-all": [
        "xpm run clean-native",
        "xpm run clean-cortex"
      ],
      "clean-native": [
        "xpm run clean-native-cmake",
        "xpm run clean-native-meson"
      ],
      "clean-native-cmake": [
        "xpm run clean --config native-cmake-sys-debug --ignore-errors",
        "xpm run clean --config native-cmake-sys-release --ignore-errors",
        "xpm run clean --config native-cmake-gcc11-debug --ignore-errors",
        "xpm run clean --config native-cmake-gcc11-release --ignore-errors",
        "xpm run clean --config native-cmake-clang12-debug --ignore-errors",
        "xpm run clean --config native-cmake-clang12-release --ignore-errors",
        "xpm run clean --config native-cmake-clang13-debug --ignore-errors",
        "xpm run clean --config native-cmake-clang13-release --ignore-errors"
      ],
      "clean-native-meson": [
        "xpm run clean --config native-meson-sys-debug --ignore-errors",
        "xpm run clean --config native-meson-sys-release --ignore-errors",
        "xpm run clean --config native-meson-gcc11-debug --ignore-errors",
        "xpm run clean --config native-meson-gcc11-release --ignore-errors",
        "xpm run clean --config native-meson-clang12-debug --ignore-errors",
        "xpm run clean --config native-meson-clang12-release --ignore-errors",
        "xpm run clean --config native-meson-clang13-debug --ignore-errors",
        "xpm run clean --config native-meson-clang13-release --ignore-errors"
      ],
      "clean-cortex": [
        "xpm run clean-cortex-cmake",
        "xpm run clean-cortex-meson"
      ],
      "clean-cortex-cmake": [
        "xpm run clean --config qemu-cortex-m7f-cmake-debug --ignore-errors",
        "xpm run clean --config qemu-cortex-m7f-cmake-release --ignore-errors",
        "xpm run clean --config qemu-cortex-m0-cmake-debug --ignore-errors",
        "xpm run clean --config qemu-cortex-m0-cmake-release --ignore-errors",
        "xpm run clean --config qemu-cortex-a72-cmake-debug --ignore-errors",
        "xpm run clean --config qemu-cortex-a72-cmake-release --ignore-errors",
        "xpm run clean --config qemu-cortex-a15-cmake-debug --ignore-errors",
        "xpm run clean --config qemu-cortex-a15-cmake-release --ignore-errors"
      ],
      "clean-cortex-meson": [
        "xpm run clean --config qemu-cortex-m7f-meson-debug --ignore-errors",
        "xpm run clean --config qemu-cortex-m7f-meson-release --ignore-errors",
        "xpm run clean --config qemu-cortex-m0-meson-debug --ignore-errors",
        "xpm run clean --config qemu-cortex-m0-meson-release --ignore-errors",
        "xpm run clean --config qemu-cortex-a72-meson-debug --ignore-errors",
        "xpm run clean --config qemu-cortex-a72-meson-release --ignore-errors",
        "xpm run clean --config qemu-cortex-a15-meson-debug --ignore-errors",
        "xpm run clean --config qemu-cortex-a15-meson-release --ignore-errors"
      ],
      "deep-clean": "rm -rf build node_modules xpacks",
      "trigger-workflow-test-all": "bash tests/scripts/trigger-workflow-test-all.sh"
    },
    "buildConfigurations": {
      "arm-none-eabi-gcc-dependencies": {
        "hidden": true,
        "$url": "https://github.com/xpack-dev-tools/",
        "devDependencies": {
          "@xpack-dev-tools/arm-none-eabi-gcc": "11.2.1-1.2.2"
        }
      },
      "aarch64-none-elf-gcc-dependencies": {
        "hidden": true,
        "$url": "https://github.com/xpack-dev-tools/",
        "devDependencies": {
          "@xpack-dev-tools/aarch64-none-elf-gcc": "11.2.1-1.2.2"
        }
      },
      "qemu-arm-dependencies": {
        "hidden": true,
        "$url": "https://github.com/xpack-dev-tools/",
        "devDependencies": {
          "@xpack-dev-tools/qemu-arm": "7.0.0-1.1"
        }
      },
      "native-cmake-sys-debug": {
        "properties": {
          "buildType": "Debug",
          "platformName": "native"
        },
        "actions": {
          "prepare": "{{ properties.commandCMakePrepare }}",
          "build": [
            "{{ properties.commandCMakeReconfigure }}",
            "{{ properties.commandCMakeBuild }}"
          ],
          "test": "{{ properties.commandCMakePerformTests }}",
          "clean": "{{ properties.commandCMakeClean }}"
        }
      },
      "native-cmake-sys-release": {
        "inherit": [
          "native-cmake-sys-debug"
        ],
        "properties": {
          "buildType": "Release"
        }
      },
      "native-cmake-gcc11-debug": {
        "properties": {
          "buildType": "Debug",
          "platformName": "native",
          "toolchainFileName": "gcc.cmake"
        },
        "actions": {
          "prepare": "{{ properties.commandCMakePrepareWithToolchain }}",
          "build": [
            "{{ properties.commandCMakeReconfigure }}",
            "{{ properties.commandCMakeBuild }}"
          ],
          "test": "{{ properties.commandCMakePerformTests }}",
          "clean": "{{ properties.commandCMakeClean }}"
        },
        "devDependencies": {
          "@xpack-dev-tools/gcc": "11.3.0-1.1"
        }
      },
      "native-cmake-gcc11-release": {
        "inherit": [
          "native-cmake-gcc11-debug"
        ],
        "properties": {
          "buildType": "Release"
        }
      },
      "native-cmake-clang12-debug": {
        "properties": {
          "buildType": "Debug",
          "platformName": "native",
          "toolchainFileName": "clang.cmake"
        },
        "actions": {
          "prepare": "{{ properties.commandCMakePrepareWithToolchain }}",
          "build": [
            "{{ properties.commandCMakeReconfigure }}",
            "{{ properties.commandCMakeBuild }}"
          ],
          "test": "{{ properties.commandCMakePerformTests }}",
          "clean": "{{ properties.commandCMakeClean }}"
        },
        "devDependencies": {
          "@xpack-dev-tools/clang": "12.0.1-2.2"
        }
      },
      "native-cmake-clang12-release": {
        "inherit": [
          "native-cmake-clang12-debug"
        ],
        "properties": {
          "buildType": "Release"
        }
      },
      "native-cmake-clang13-debug": {
        "properties": {
          "buildType": "Debug",
          "platformName": "native",
          "toolchainFileName": "clang.cmake"
        },
        "actions": {
          "prepare": "{{ properties.commandCMakePrepareWithToolchain }}",
          "build": [
            "{{ properties.commandCMakeReconfigure }}",
            "{{ properties.commandCMakeBuild }}"
          ],
          "test": "{{ properties.commandCMakePerformTests }}",
          "clean": "{{ properties.commandCMakeClean }}"
        },
        "devDependencies": {
          "@xpack-dev-tools/clang": "13.0.1-1.1"
        }
      },
      "native-cmake-clang13-release": {
        "inherit": [
          "native-cmake-clang13-debug"
        ],
        "properties": {
          "buildType": "Release"
        }
      },
      "native-meson-sys-debug": {
        "properties": {
          "buildType": "debug",
          "platformName": "native"
        },
        "actions": {
          "prepare": "{{ properties.commandMesonPrepare }}",
          "build": [
            "{{ properties.commandMesonReconfigure }}",
            "{{ properties.commandMesonBuild }}"
          ],
          "test": "{{ properties.commandMesonPerformTests }}",
          "clean": "{{ properties.commandMesonClean }}"
        }
      },
      "native-meson-sys-release": {
        "inherit": [
          "native-meson-sys-debug"
        ],
        "properties": {
          "buildType": "release"
        }
      },
      "native-meson-gcc11-debug": {
        "properties": {
          "buildType": "debug",
          "platformName": "native",
          "toolchainFileName": "gcc-{{ os.platform }}.ini"
        },
        "actions": {
          "prepare": "{{ properties.commandMesonPrepareWithToolchain }}",
          "build": [
            "{{ properties.commandMesonReconfigure }}",
            "{{ properties.commandMesonBuild }}"
          ],
          "test": "{{ properties.commandMesonPerformTests }}",
          "clean": "{{ properties.commandMesonClean }}"
        },
        "devDependencies": {
          "@xpack-dev-tools/gcc": "11.3.0-1.1"
        }
      },
      "native-meson-gcc11-release": {
        "inherit": [
          "native-meson-gcc11-debug"
        ],
        "properties": {
          "buildType": "release"
        }
      },
      "native-meson-clang12-debug": {
        "properties": {
          "buildType": "debug",
          "platformName": "native",
          "toolchainFileName": "clang-{{ os.platform }}.ini"
        },
        "actions": {
          "prepare": "{{ properties.commandMesonPrepareWithToolchain }}",
          "build": [
            "{{ properties.commandMesonReconfigure }}",
            "{{ properties.commandMesonBuild }}"
          ],
          "test": "{{ properties.commandMesonPerformTests }}",
          "clean": "{{ properties.commandMesonClean }}"
        },
        "devDependencies": {
          "@xpack-dev-tools/clang": "12.0.1-2.2"
        }
      },
      "native-meson-clang12-release": {
        "inherit": [
          "native-meson-clang12-debug"
        ],
        "properties": {
          "buildType": "release"
        }
      },
      "native-meson-clang13-debug": {
        "properties": {
          "buildType": "debug",
          "platformName": "native",
          "toolchainFileName": "clang-{{ os.platform }}.ini"
        },
        "actions": {
          "prepare": "{{ properties.commandMesonPrepareWithToolchain }}",
          "build": [
            "{{ properties.commandMesonReconfigure }}",
            "{{ properties.commandMesonBuild }}"
          ],
          "test": "{{ properties.commandMesonPerformTests }}",
          "clean": "{{ properties.commandMesonClean }}"
        },
        "devDependencies": {
          "@xpack-dev-tools/clang": "13.0.1-1.1"
        }
      },
      "native-meson-clang13-release": {
        "inherit": [
          "native-meson-clang13-debug"
        ],
        "properties": {
          "buildType": "release"
        }
      },
      "qemu-cortex-m7f-cmake-debug": {
        "inherit": [
          "arm-none-eabi-gcc-dependencies",
          "qemu-arm-dependencies"
        ],
        "properties": {
          "buildType": "Debug",
          "platformName": "qemu-cortex-m7f",
          "toolchainFileName": "arm-none-eabi-gcc.cmake",
          "shortConfigurationName": "q1d",
          "buildFolderRelativePath": "{% if os.platform != 'win32' %}{{ 'build' | path_join: configuration.name | to_filename | downcase }}{% else %}{{ 'build' | path_join: properties.shortConfigurationName | to_filename | downcase }}{% endif %}",
          "buildFolderRelativePathPosix": "{% if os.platform != 'win32' %}{{ 'build' | path_posix_join: configuration.name | downcase }}{% else %}{{ 'build' | path_posix_join: properties.shortConfigurationName | downcase }}{% endif %}"
        },
        "actions": {
          "prepare": "{{ properties.commandCMakePrepareWithToolchain }}",
          "build": [
            "{{ properties.commandCMakeReconfigure }}",
            "{{ properties.commandCMakeBuild }}"
          ],
          "test": "{{ properties.commandCMakePerformTests }}",
          "clean": "{{ properties.commandCMakeClean }}"
        }
      },
      "qemu-cortex-m7f-cmake-release": {
        "inherit": [
          "qemu-cortex-m7f-cmake-debug"
        ],
        "properties": {
          "buildType": "MinSizeRel",
          "shortConfigurationName": "q1r"
        }
      },
      "qemu-cortex-m0-cmake-debug": {
        "inherit": [
          "arm-none-eabi-gcc-dependencies",
          "qemu-arm-dependencies"
        ],
        "properties": {
          "buildType": "Debug",
          "platformName": "qemu-cortex-m0",
          "toolchainFileName": "arm-none-eabi-gcc.cmake",
          "shortConfigurationName": "q2d",
          "buildFolderRelativePath": "{% if os.platform != 'win32' %}{{ 'build' | path_join: configuration.name | to_filename | downcase }}{% else %}{{ 'build' | path_join: properties.shortConfigurationName | to_filename | downcase }}{% endif %}",
          "buildFolderRelativePathPosix": "{% if os.platform != 'win32' %}{{ 'build' | path_posix_join: configuration.name | downcase }}{% else %}{{ 'build' | path_posix_join: properties.shortConfigurationName | downcase }}{% endif %}"
        },
        "actions": {
          "prepare": "{{ properties.commandCMakePrepareWithToolchain }}",
          "build": [
            "{{ properties.commandCMakeReconfigure }}",
            "{{ properties.commandCMakeBuild }}"
          ],
          "test": "{{ properties.commandCMakePerformTests }}",
          "clean": "{{ properties.commandCMakeClean }}"
        }
      },
      "qemu-cortex-m0-cmake-release": {
        "inherit": [
          "qemu-cortex-m0-cmake-debug"
        ],
        "properties": {
          "buildType": "MinSizeRel",
          "shortConfigurationName": "q2r"
        }
      },
      "qemu-cortex-a72-cmake-debug": {
        "inherit": [
          "aarch64-none-elf-gcc-dependencies",
          "qemu-arm-dependencies"
        ],
        "properties": {
          "buildType": "Debug",
          "platformName": "qemu-cortex-a72",
          "toolchainFileName": "aarch64-none-elf-gcc.cmake",
          "shortConfigurationName": "q3d",
          "buildFolderRelativePath": "{% if os.platform != 'win32' %}{{ 'build' | path_join: configuration.name | to_filename | downcase }}{% else %}{{ 'build' | path_join: properties.shortConfigurationName | to_filename | downcase }}{% endif %}",
          "buildFolderRelativePathPosix": "{% if os.platform != 'win32' %}{{ 'build' | path_posix_join: configuration.name | downcase }}{% else %}{{ 'build' | path_posix_join: properties.shortConfigurationName | downcase }}{% endif %}"
        },
        "actions": {
          "prepare": "{{ properties.commandCMakePrepareWithToolchain }}",
          "build": [
            "{{ properties.commandCMakeReconfigure }}",
            "{{ properties.commandCMakeBuild }}"
          ],
          "test": "{{ properties.commandCMakePerformTests }}",
          "clean": "{{ properties.commandCMakeClean }}"
        }
      },
      "qemu-cortex-a72-cmake-release": {
        "inherit": [
          "qemu-cortex-a72-cmake-debug"
        ],
        "properties": {
          "buildType": "MinSizeRel",
          "shortConfigurationName": "q3r"
        }
      },
      "qemu-cortex-a15-cmake-debug": {
        "inherit": [
          "arm-none-eabi-gcc-dependencies",
          "qemu-arm-dependencies"
        ],
        "properties": {
          "buildType": "Debug",
          "platformName": "qemu-cortex-a15",
          "toolchainFileName": "arm-none-eabi-gcc.cmake",
          "shortConfigurationName": "q4d",
          "buildFolderRelativePath": "{% if os.platform != 'win32' %}{{ 'build' | path_join: configuration.name | to_filename | downcase }}{% else %}{{ 'build' | path_join: properties.shortConfigurationName | to_filename | downcase }}{% endif %}",
          "buildFolderRelativePathPosix": "{% if os.platform != 'win32' %}{{ 'build' | path_posix_join: configuration.name | downcase }}{% else %}{{ 'build' | path_posix_join: properties.shortConfigurationName | downcase }}{% endif %}"
        },
        "actions": {
          "prepare": "{{ properties.commandCMakePrepareWithToolchain }}",
          "build": [
            "{{ properties.commandCMakeReconfigure }}",
            "{{ properties.commandCMakeBuild }}"
          ],
          "test": "{{ properties.commandCMakePerformTests }}",
          "clean": "{{ properties.commandCMakeClean }}"
        }
      },
      "qemu-cortex-a15-cmake-release": {
        "inherit": [
          "qemu-cortex-a15-cmake-debug"
        ],
        "properties": {
          "buildType": "MinSizeRel",
          "shortConfigurationName": "q4r"
        }
      },
      "qemu-cortex-m7f-meson-debug": {
        "inherit": [
          "arm-none-eabi-gcc-dependencies",
          "qemu-arm-dependencies"
        ],
        "properties": {
          "buildType": "debug",
          "platformName": "qemu-cortex-m7f",
          "toolchainFileName": "arm-none-eabi-gcc-{{ os.platform }}.ini"
        },
        "actions": {
          "prepare": "{{ properties.commandMesonPrepareCross }}",
          "build": [
            "{{ properties.commandMesonReconfigure }}",
            "{{ properties.commandMesonBuild }}"
          ],
          "test": "{{ properties.commandMesonPerformTests }}",
          "clean": "{{ properties.commandMesonClean }}"
        }
      },
      "qemu-cortex-m7f-meson-release": {
        "inherit": [
          "qemu-cortex-m7f-meson-debug"
        ],
        "properties": {
          "buildType": "minsize"
        }
      },
      "qemu-cortex-m0-meson-debug": {
        "inherit": [
          "arm-none-eabi-gcc-dependencies",
          "qemu-arm-dependencies"
        ],
        "properties": {
          "buildType": "debug",
          "platformName": "qemu-cortex-m0",
          "toolchainFileName": "arm-none-eabi-gcc-{{ os.platform }}.ini"
        },
        "actions": {
          "prepare": "{{ properties.commandMesonPrepareCross }}",
          "build": [
            "{{ properties.commandMesonReconfigure }}",
            "{{ properties.commandMesonBuild }}"
          ],
          "test": "{{ properties.commandMesonPerformTests }}",
          "clean": "{{ properties.commandMesonClean }}"
        }
      },
      "qemu-cortex-m0-meson-release": {
        "inherit": [
          "qemu-cortex-m0-meson-debug"
        ],
        "properties": {
          "buildType": "minsize"
        }
      },
      "qemu-cortex-a72-meson-debug": {
        "inherit": [
          "aarch64-none-elf-gcc-dependencies",
          "qemu-arm-dependencies"
        ],
        "properties": {
          "buildType": "debug",
          "platformName": "qemu-cortex-a72",
          "toolchainFileName": "aarch64-none-elf-gcc-{{ os.platform }}.ini"
        },
        "actions": {
          "prepare": "{{ properties.commandMesonPrepareCross }}",
          "build": [
            "{{ properties.commandMesonReconfigure }}",
            "{{ properties.commandMesonBuild }}"
          ],
          "test": "{{ properties.commandMesonPerformTests }}",
          "clean": "{{ properties.commandMesonClean }}"
        }
      },
      "qemu-cortex-a72-meson-release": {
        "inherit": [
          "qemu-cortex-a72-meson-debug"
        ],
        "properties": {
          "buildType": "minsize"
        }
      },
      "qemu-cortex-a15-meson-debug": {
        "inherit": [
          "arm-none-eabi-gcc-dependencies",
          "qemu-arm-dependencies"
        ],
        "properties": {
          "buildType": "debug",
          "platformName": "qemu-cortex-a15",
          "toolchainFileName": "arm-none-eabi-gcc-{{ os.platform }}.ini"
        },
        "actions": {
          "prepare": "{{ properties.commandMesonPrepareCross }}",
          "build": [
            "{{ properties.commandMesonReconfigure }}",
            "{{ properties.commandMesonBuild }}"
          ],
          "test": "{{ properties.commandMesonPerformTests }}",
          "clean": "{{ properties.commandMesonClean }}"
        }
      },
      "qemu-cortex-a15-meson-release": {
        "inherit": [
          "qemu-cortex-a15-meson-debug"
        ],
        "properties": {
          "buildType": "minsize"
        }
      }
    }
  }
}
